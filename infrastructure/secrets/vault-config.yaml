# HashiCorp Vault Configuration for On-Premises Deployment
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  namespace: vault
data:
  vault.hcl: |
    ui = true
    
    listener "tcp" {
      address = "0.0.0.0:8200"
      tls_cert_file = "/vault/tls/tls.crt"
      tls_key_file = "/vault/tls/tls.key"
      tls_min_version = "tls12"
    }
    
    storage "postgresql" {
      connection_url = "postgres://vault:${VAULT_DB_PASSWORD}@postgres:5432/vault?sslmode=require"
      ha_enabled = "true"
    }
    
    seal "awskms" {
      region = "us-east-1"
      kms_key_id = "${AWS_KMS_KEY_ID}"
    }
    
    api_addr = "https://vault.aic-platform.svc.cluster.local:8200"
    cluster_addr = "https://vault.aic-platform.svc.cluster.local:8201"
    
    # Enable audit logging
    audit {
      file {
        file_path = "/vault/logs/audit.log"
        log_raw = false
        format = "json"
      }
    }
---
# Vault Service Account with RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: vault
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-auth
rules:
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["serviceaccounts/token"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-auth
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-auth
subjects:
- kind: ServiceAccount
  name: vault
  namespace: vault
---
# Vault Kubernetes Auth Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-k8s-auth
  namespace: vault
data:
  setup.sh: |
    #!/bin/bash
    
    # Enable Kubernetes auth method
    vault auth enable kubernetes
    
    # Configure Kubernetes auth
    vault write auth/kubernetes/config \
        token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
        kubernetes_host="https://$KUBERNETES_PORT_443_TCP_ADDR:443" \
        kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    
    # Create policies for AIC platform
    vault policy write aic-database - <<EOF
    path "secret/data/aic/database/*" {
      capabilities = ["read"]
    }
    EOF
    
    vault policy write aic-api - <<EOF
    path "secret/data/aic/api/*" {
      capabilities = ["read"]
    }
    path "secret/data/aic/oauth/*" {
      capabilities = ["read"]
    }
    EOF
    
    vault policy write aic-ai - <<EOF
    path "secret/data/aic/ai/*" {
      capabilities = ["read"]
    }
    EOF
    
    # Create Kubernetes auth roles
    vault write auth/kubernetes/role/aic-database \
        bound_service_account_names=aic-database \
        bound_service_account_namespaces=aic-platform \
        policies=aic-database \
        ttl=24h
    
    vault write auth/kubernetes/role/aic-api \
        bound_service_account_names=aic-api \
        bound_service_account_namespaces=aic-platform \
        policies=aic-api \
        ttl=24h
    
    vault write auth/kubernetes/role/aic-ai \
        bound_service_account_names=aic-ai \
        bound_service_account_namespaces=aic-platform \
        policies=aic-ai \
        ttl=24h
