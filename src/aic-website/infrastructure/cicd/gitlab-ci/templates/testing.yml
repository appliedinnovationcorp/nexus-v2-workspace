# Testing Template for GitLab CI
# Include this template in your .gitlab-ci.yml file:
# include:
#   - local: /infrastructure/cicd/gitlab-ci/templates/testing.yml

# Node.js setup
.node-setup: &node-setup
  image: node:18-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
      - .yarn/
      - .npm/
  before_script:
    - npm ci --cache .npm --prefer-offline

# Unit Tests
unit-tests:
  stage: test
  <<: *node-setup
  script:
    - npm run test:unit -- --ci --coverage --reporters=default --reporters=jest-junit
  artifacts:
    reports:
      junit: coverage/junit/junit.xml
    paths:
      - coverage/
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# Integration Tests
integration-tests:
  stage: test
  <<: *node-setup
  services:
    - name: postgres:14-alpine
      alias: postgres
      variables:
        POSTGRES_DB: test
        POSTGRES_USER: test
        POSTGRES_PASSWORD: test
    - name: redis:7-alpine
      alias: redis
  variables:
    DATABASE_URL: "postgresql://test:test@postgres:5432/test"
    REDIS_URL: "redis://redis:6379"
  script:
    - npm run test:integration -- --ci --reporters=default --reporters=jest-junit
  artifacts:
    reports:
      junit: coverage/junit/junit.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# End-to-End Tests
e2e-tests:
  stage: test
  image: mcr.microsoft.com/playwright:v1.32.0-focal
  <<: *node-setup
  script:
    - npm run test:e2e
  artifacts:
    when: always
    paths:
      - playwright-report/
      - test-results/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# Component Tests
component-tests:
  stage: test
  <<: *node-setup
  script:
    - npm run test:components -- --ci --reporters=default --reporters=jest-junit
  artifacts:
    reports:
      junit: coverage/junit/junit.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# API Tests
api-tests:
  stage: test
  <<: *node-setup
  services:
    - name: postgres:14-alpine
      alias: postgres
      variables:
        POSTGRES_DB: test
        POSTGRES_USER: test
        POSTGRES_PASSWORD: test
    - name: redis:7-alpine
      alias: redis
  variables:
    DATABASE_URL: "postgresql://test:test@postgres:5432/test"
    REDIS_URL: "redis://redis:6379"
    API_URL: "http://localhost:3000"
  script:
    - npm run start:api &
    - sleep 10
    - npm run test:api
  artifacts:
    paths:
      - api-test-results/
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# Performance Tests
performance-tests:
  stage: test
  image: grafana/k6:latest
  script:
    - cd src/aic-website/infrastructure/performance
    - k6 run load-test.js -e BASE_URL=https://staging.example.com
  artifacts:
    reports:
      performance: performance.json
    paths:
      - src/aic-website/infrastructure/performance/results/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual

# Visual Regression Tests
visual-regression-tests:
  stage: test
  image: backstopjs/backstopjs:6.1.4
  script:
    - cd src/aic-website/tests/visual
    - backstop test
  artifacts:
    when: always
    paths:
      - src/aic-website/tests/visual/backstop_data/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
