apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-services
  namespace: ai-services
  labels:
    app: ai-services
    part-of: aic-website
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-services
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ai-services
      annotations:
        kuma.io/mesh: default
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: ai-services
          image: ghcr.io/applied-innovation-corp/aic-website/ai-services:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "8080"
            - name: LOG_LEVEL
              value: "info"
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: ai-redis-credentials
                  key: host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: ai-redis-credentials
                  key: port
            - name: KAFKA_BROKERS
              value: "kafka-headless.messaging:9092"
            - name: MODEL_SERVER_URL
              value: "http://model-server:8501/v1/models"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ai-api-credentials
                  key: openai-api-key
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 2000m
              memory: 4Gi
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /app/config
            - name: models-cache
              mountPath: /app/models-cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: ai-services-config
        - name: models-cache
          persistentVolumeClaim:
            claimName: ai-models-cache
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - ai-services
                topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: accelerator
                    operator: In
                    values:
                      - gpu
