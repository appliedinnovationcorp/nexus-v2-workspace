apiVersion: v1
kind: ConfigMap
metadata:
  name: shared-config
  namespace: backend-services
  labels:
    app: aic-website
    component: shared
    part-of: aic-website
data:
  # Application-wide constants
  app-name: "AIC Website"
  app-version: "2.0.0"
  company-name: "Applied Innovation Corporation"
  
  # Domain configuration
  domains.json: |
    {
      "primary": "aicorp.com",
      "subdomains": {
        "main": "www.aicorp.com",
        "smb": "smb.aicorp.com",
        "enterprise": "enterprise.aicorp.com",
        "nexus": "nexus.aicorp.com",
        "investors": "investors.aicorp.com",
        "admin": "admin.aicorp.com",
        "cms": "cms.aicorp.com",
        "api": "api.aicorp.com"
      },
      "cdn": {
        "assets": "assets.aicorp.com",
        "images": "images.aicorp.com"
      }
    }
  
  # Feature flags shared across services
  feature-flags.json: |
    {
      "enableAI": true,
      "enableAnalytics": true,
      "enableCaching": true,
      "enableRateLimiting": true,
      "enableCompression": true,
      "enableCDN": true,
      "enableSSR": true,
      "enablePWA": true,
      "enableOfflineMode": false,
      "enableDarkMode": true,
      "enableMultiLanguage": false,
      "enableA11y": true,
      "enableSEO": true,
      "enableSitemap": true,
      "enableRobots": true,
      "enableSecurityHeaders": true,
      "enableCSP": true,
      "enableHSTS": true
    }
  
  # Service discovery configuration
  services.json: |
    {
      "backend": {
        "name": "backend-api",
        "namespace": "backend-services",
        "port": 80,
        "healthCheck": "/health"
      },
      "ai": {
        "name": "ai-services",
        "namespace": "ai-services", 
        "port": 80,
        "healthCheck": "/health"
      },
      "cms": {
        "name": "ghost-cms",
        "namespace": "cms",
        "port": 80,
        "healthCheck": "/ghost/api/v3/admin/site/"
      },
      "search": {
        "name": "meilisearch",
        "namespace": "storage",
        "port": 7700,
        "healthCheck": "/health"
      }
    }
  
  # Common timeouts and limits
  limits.json: |
    {
      "http": {
        "timeout": 30000,
        "keepAlive": 5000,
        "maxHeaderSize": 8192,
        "maxBodySize": "10MB"
      },
      "database": {
        "connectionTimeout": 10000,
        "queryTimeout": 30000,
        "poolTimeout": 60000
      },
      "cache": {
        "defaultTTL": 300,
        "maxTTL": 3600,
        "maxKeys": 10000
      },
      "upload": {
        "maxFileSize": "50MB",
        "allowedTypes": ["image/*", "application/pdf", "text/*"],
        "maxFiles": 10
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: observability-config
  namespace: observability
  labels:
    app: aic-website
    component: observability
    part-of: aic-website
data:
  # Prometheus configuration
  prometheus-config.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "alert_rules.yml"
    
    scrape_configs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
  
  # Grafana dashboard configuration
  grafana-dashboards.json: |
    {
      "dashboards": [
        {
          "name": "AIC Website Overview",
          "path": "/var/lib/grafana/dashboards/overview.json"
        },
        {
          "name": "Backend Services",
          "path": "/var/lib/grafana/dashboards/backend.json"
        },
        {
          "name": "AI Services",
          "path": "/var/lib/grafana/dashboards/ai.json"
        },
        {
          "name": "Infrastructure",
          "path": "/var/lib/grafana/dashboards/infrastructure.json"
        }
      ]
    }
  
  # Alert rules
  alert-rules.yml: |
    groups:
      - name: aic-website-alerts
        rules:
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High error rate detected"
              description: "Error rate is {{ $value }} for {{ $labels.service }}"
          
          - alert: HighLatency
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High latency detected"
              description: "95th percentile latency is {{ $value }}s for {{ $labels.service }}"
          
          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Pod is crash looping"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is crash looping"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: security-config
  namespace: security
  labels:
    app: aic-website
    component: security
    part-of: aic-website
data:
  # Security policies
  security-policies.json: |
    {
      "authentication": {
        "methods": ["jwt", "oauth2", "api-key"],
        "sessionTimeout": 3600,
        "maxLoginAttempts": 5,
        "lockoutDuration": 900
      },
      "authorization": {
        "rbac": {
          "enabled": true,
          "defaultRole": "user"
        },
        "permissions": {
          "admin": ["*"],
          "editor": ["read", "write"],
          "user": ["read"]
        }
      },
      "encryption": {
        "algorithm": "AES-256-GCM",
        "keyRotation": "30d",
        "atRest": true,
        "inTransit": true
      },
      "compliance": {
        "gdpr": true,
        "ccpa": true,
        "sox": false,
        "pci": false
      }
    }
  
  # Content Security Policy
  csp-policy.json: |
    {
      "default-src": ["'self'"],
      "script-src": ["'self'", "'unsafe-inline'", "https://www.googletagmanager.com"],
      "style-src": ["'self'", "'unsafe-inline'", "https://fonts.googleapis.com"],
      "font-src": ["'self'", "https://fonts.gstatic.com"],
      "img-src": ["'self'", "data:", "https:"],
      "connect-src": ["'self'", "https://api.aicorp.com"],
      "frame-ancestors": ["'none'"],
      "base-uri": ["'self'"],
      "form-action": ["'self'"]
    }
