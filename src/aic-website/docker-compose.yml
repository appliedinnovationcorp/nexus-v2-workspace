# AIC Website - Docker Compose Configuration
# Development and local testing environment

version: '3.8'

services:
  # Main Corporate Website
  web-main:
    build:
      context: .
      dockerfile: apps/web-main/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://aicadmin:password@postgres:5432/aicwebsite
      - MONGODB_URL=mongodb://aicadmin:password@mongodb:27017/aicwebsite
      - MEILISEARCH_HOST=http://meilisearch:7700
      - MEILISEARCH_API_KEY=masterKey
      - NEXTAUTH_SECRET=your-secret-key
      - NEXTAUTH_URL=http://localhost:3000
    depends_on:
      - postgres
      - mongodb
      - meilisearch
      - redis
    volumes:
      - ./apps/web-main:/app
      - /app/node_modules
    networks:
      - aic-network

  # SMB Portal
  web-smb:
    build:
      context: .
      dockerfile: apps/web-smb/Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://aicadmin:password@postgres:5432/aicwebsite
      - MONGODB_URL=mongodb://aicadmin:password@mongodb:27017/aicwebsite
      - MEILISEARCH_HOST=http://meilisearch:7700
      - MEILISEARCH_API_KEY=masterKey
    depends_on:
      - postgres
      - mongodb
      - meilisearch
    networks:
      - aic-network

  # Enterprise Portal
  web-enterprise:
    build:
      context: .
      dockerfile: apps/web-enterprise/Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://aicadmin:password@postgres:5432/aicwebsite
      - MONGODB_URL=mongodb://aicadmin:password@mongodb:27017/aicwebsite
      - MEILISEARCH_HOST=http://meilisearch:7700
      - MEILISEARCH_API_KEY=masterKey
    depends_on:
      - postgres
      - mongodb
      - meilisearch
    networks:
      - aic-network

  # Nexus Portal
  web-nexus:
    build:
      context: .
      dockerfile: apps/web-nexus/Dockerfile
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://aicadmin:password@postgres:5432/aicwebsite
      - MONGODB_URL=mongodb://aicadmin:password@mongodb:27017/aicwebsite
    depends_on:
      - postgres
      - mongodb
    networks:
      - aic-network

  # Investor Portal
  web-investors:
    build:
      context: .
      dockerfile: apps/web-investors/Dockerfile
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://aicadmin:password@postgres:5432/aicwebsite
    depends_on:
      - postgres
    networks:
      - aic-network

  # Admin Dashboard
  admin-dashboard:
    build:
      context: .
      dockerfile: apps/admin-dashboard/Dockerfile
    ports:
      - "3005:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://aicadmin:password@postgres:5432/aicwebsite
      - MONGODB_URL=mongodb://aicadmin:password@mongodb:27017/aicwebsite
      - MEILISEARCH_HOST=http://meilisearch:7700
      - MEILISEARCH_API_KEY=masterKey
      - PAYLOAD_SECRET=your-payload-secret
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
      - mongodb
      - meilisearch
      - redis
    networks:
      - aic-network

  # CMS Backend
  cms:
    build:
      context: .
      dockerfile: apps/cms/Dockerfile
    ports:
      - "3006:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://aicadmin:password@postgres:5432/aicwebsite
      - MONGODB_URL=mongodb://aicadmin:password@mongodb:27017/aicwebsite
      - PAYLOAD_SECRET=your-payload-secret
    depends_on:
      - postgres
      - mongodb
    networks:
      - aic-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=aicwebsite
      - POSTGRES_USER=aicadmin
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - aic-network

  # MongoDB Database
  mongodb:
    image: mongo:7
    environment:
      - MONGO_INITDB_ROOT_USERNAME=aicadmin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=aicwebsite
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./infra/docker/mongodb/init.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - aic-network

  # Meilisearch (AI-Enhanced Search)
  meilisearch:
    image: getmeili/meilisearch:v1.5
    environment:
      - MEILI_MASTER_KEY=masterKey
      - MEILI_ENV=development
    ports:
      - "7700:7700"
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - aic-network

  # Redis (Caching & Sessions)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aic-network

  # Ollama (Local LLM)
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - aic-network

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./infra/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - aic-network

  # Grafana (Monitoring Dashboard)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3007:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./infra/docker/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - aic-network

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infra/docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web-main
      - web-smb
      - web-enterprise
      - web-nexus
      - web-investors
      - admin-dashboard
    networks:
      - aic-network

volumes:
  postgres_data:
  mongodb_data:
  meilisearch_data:
  redis_data:
  ollama_data:
  prometheus_data:
  grafana_data:

networks:
  aic-network:
    driver: bridge
